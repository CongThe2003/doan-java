package doan_java;

import java.sql.ResultSet;
import java.util.ArrayList;
import model.Sach;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SearchBook extends javax.swing.JFrame {

    /**
     * Creates new form SearchBook
     */
    public Connection conn = null;
    ArrayList<Sach> arr = new ArrayList<Sach>();
    public void LoadDataToArrayList() throws ClassNotFoundException, SQLException{
        arr.clear();
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://LAPTOP-M652I7NI\\SQLEXPRESS:1433;databaseName=QuanLySach1;"
                    +"encrypt=true;trustServerCertificate=true";
            conn = DriverManager.getConnection(connectionURL,"sa","123456");
            String sql = "SELECT * FROM SACH";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                int masach = rs.getInt("MaSach");
                String tensach = rs.getString(2);
                int matg = rs.getInt("MaTacGia");
                int matl = rs.getInt("MaTheLoai");
                int manxb = rs.getInt("MaNXB");
                int namxb = rs.getInt("NamXB");
                Sach sach = new Sach(masach, tensach, matg, matl, manxb, namxb);
                
                
                arr.add(sach);
            }
            conn.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void xoa(int id){
        int rows = 0;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://LAPTOP-M652I7NI\\SQLEXPRESS:1433;databaseName=QuanLySach1;"
                    +"encrypt=true;trustServerCertificate=true";
            conn = DriverManager.getConnection(connectionURL,"sa","123456");
            String sql = "DELETE FROM Sach WHERE MaSach = ?";
            PreparedStatement stm = conn.prepareStatement(sql);
            stm.setInt(1, id);
            
            rows = stm.executeUpdate();
            
            if(rows > 1){
                System.out.println("Xóa thành công!");
                System.out.println(rows);
            } else{
                System.out.println(rows);
                System.out.println("Xóa thất bại!");
            }
            
            stm.close();
            conn.close();
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("Cập nhật thất bại");
            
            System.out.println(rows);
        }
    }
    
    public void LoadDataArrayListToTable(){
        DefaultTableModel model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0);
        
        //Thêm dữ liệu lên table từ arraylist có 2 cách:
        // Cách 1: dùng for i và vector
        for (int i = 0; i < arr.size(); i++) {
            Vector v = new Vector();
            v.add(arr.get(i).getMaSach());
            v.add(arr.get(i).getTenSach());
            v.add(arr.get(i).getMaTheLoai());
            v.add(arr.get(i).getMaTacGia());
            v.add(arr.get(i).getMaNXB());
            v.add(arr.get(i).getNamXB());
            model.addRow(v);
        }
        
        /*Cách 2: dùng for each và Object
        for (Sach sach : arr) {
            model.addRow(new Object[]{sach.getMaSach(), sach.getTenSach(),
                sach.getMaTheLoai(), sach.getMaTacGia(), sach.getMaNXB(),
                sach.getNamXB()});
        }*/
    }
    
    public SearchBook() throws ClassNotFoundException, SQLException {
        initComponents();
        setLocationRelativeTo(null);
        LoadDataToArrayList();
        LoadDataArrayListToTable(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pupXoa = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        pupXoa.setText("Xóa");
        pupXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pupXoaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pupXoa);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 101, 84));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Dữ Liệu Tìm Kiếm:");

        txtTimKiem.setBackground(new java.awt.Color(102, 204, 255));
        txtTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 1, 36)); // NOI18N
        jLabel2.setText("Table Book");

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sách", "Tên Sách", "Mã Tác Giả", "Mã Thể Loại", "Mã NXB", "Năm Xuất Bản"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        jButton1.setBackground(new java.awt.Color(255, 0, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(111, 198, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jButton1))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        arr.clear();
        int maSach = 0;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://LAPTOP-M652I7NI\\SQLEXPRESS:1433;databaseName=QuanLySach1;"
                    +"encrypt=true;trustServerCertificate=true";
            conn = DriverManager.getConnection(connectionURL,"sa","123456");
            
            if(txtTimKiem.getText().isEmpty()){
                maSach = 0;
            }else if(txtTimKiem.getText().chars().allMatch(Character::isDigit))
                maSach = Integer.parseInt(txtTimKiem.getText());
             
            String sql = "SELECT * FROM SACH WHERE TenSach like N'%"+ txtTimKiem.getText()+"%' or MaSach="+maSach;
            System.out.println(sql);
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            System.out.println(sql);
            
            while(rs.next()){
                int masach = rs.getInt("MaSach");
                String tensach = rs.getString(2);
                int matg = rs.getInt("MaTacGia");
                int matl = rs.getInt("MaTheLoai");
                int manxb = rs.getInt("MaNXB");
                int namxb = rs.getInt("NamXB");
                Sach sach = new Sach(masach, tensach, matg, matl, manxb, namxb);
                
                
                arr.add(sach);
            }
            conn.close();
            
            LoadDataArrayListToTable();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMouseClicked
        if(evt.getClickCount() == 2){
            //Hiển thị popup Xóa và căn tọa độ để menu lên cao hoặc xuống thấp
            jPopupMenu1.show(this, 250, 200 + (tblSach.getSelectedRow())*25);
        }
    }//GEN-LAST:event_tblSachMouseClicked

    private void pupXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pupXoaActionPerformed
        // Viết sự kiện xóa
        //Hiện thị câu hỏi trước khi xóa
        int ret = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa hay không?","Thông báo",JOptionPane.YES_NO_OPTION);
        if(ret==JOptionPane.YES_OPTION){
            int idxoa;
            int dong;
            
            //Lấy dòng mình đang chọn
            dong = tblSach.getSelectedRow();
            
            //Lấy id là dòng mình đang chọn và cột số 0
            idxoa = (int) tblSach.getValueAt(tblSach.getSelectedRow(), 0);
            
            System.out.println(" "+ idxoa);
            xoa(idxoa);
            try {
                LoadDataToArrayList();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SearchBook.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(SearchBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            LoadDataArrayListToTable();
            
            JOptionPane.showMessageDialog(this, "Xóa Thành Công!");
        }
    }//GEN-LAST:event_pupXoaActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SearchBook().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SearchBook.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchBook.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem pupXoa;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
